{"version":3,"sources":["styles/header.module.css","Loader/Loader.js","views/HomeView.js","services/ApiGenerator.js","views/Navigation.js","views/MoviesView.js","views/MoviesPage.js","views/Cast.js","views/Review.js","views/FilmPage.js","App.js","index.js"],"names":["module","exports","Spinner","type","color","height","width","Component","HomeView","useRouteMatch","url","useState","page","setPage","loader","setLoader","useEffect","axios","get","then","res","data","results","finally","map","link","to","id","title","Navigation","className","s","header","nav","activeClassName","activeLink","exact","MoviesView","onSubmit","query","setQuery","e","preventDefault","value","onChange","target","MoviesPage","searchQuery","setSearchQuery","films","setFilms","prevFilm","fetchFilm","film","Cast","actors","setActors","useParams","movieId","splicedActors","cast","slice","actor","src","profile_path","alt","image","name","character","uuidv4","Review","reviews","setReview","length","review","author","content","FilmPage","path","HomePageApi","poster_path","vote_average","style","overview","genres","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.2446b9d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__Q2Fj2\",\"nav\":\"header_nav__2_YoI\",\"link\":\"header_link__42Y1m\",\"activeLink\":\"header_activeLink__2_zBD\"};","import Loader from 'react-loader-spinner';\r\nimport { Component } from 'react';\r\nexport default class Spinner extends Component {\r\n  //other logic\r\n  render() {\r\n    return <Loader type=\"Audio\" color=\"#00BFFF\" height={80} width={80} />;\r\n  }\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { Link, NavLink, useRouteMatch } from 'react-router-dom';\r\nimport * as HomePageApi from '../services/ApiGenerator';\r\nimport Loader from '../Loader/Loader';\r\n\r\nexport default function HomeView() {\r\n  const { url } = useRouteMatch();\r\n\r\n  const [page, setPage] = useState(null);\r\n  const [loader, setLoader] = useState(false);\r\n  useEffect(() => {\r\n    const fetchFilm = () => {\r\n      setLoader(true);\r\n      HomePageApi.fetchFilmsTrends()\r\n        .then(res => res.data)\r\n        .then(({ results }) => {\r\n          setPage(results);\r\n        })\r\n        .finally(() => setLoader(false));\r\n    };\r\n    fetchFilm();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>Films</h1>\r\n      <ul>\r\n        {page &&\r\n          page.map(link => (\r\n            <li key={link.id}>\r\n              <Link to={`movies/${link.id}`}>{link.title}</Link>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n      {loader && <Loader />}\r\n    </>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nexport function fetchFilmsTrends() {\r\n  return axios.get(\r\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=333ea31ca01b4ec8ead6d98f3e2d2283',\r\n  );\r\n}\r\nexport function findFilms(query) {\r\n  return axios.get(\r\n    `https://api.themoviedb.org/3/search/movie?api_key=333ea31ca01b4ec8ead6d98f3e2d2283&query=${query}`,\r\n  );\r\n}\r\n\r\nexport function filmDetails(id) {\r\n  return axios.get(\r\n    `https://api.themoviedb.org/3/movie/${id}?api_key=333ea31ca01b4ec8ead6d98f3e2d2283&language=en-US`,\r\n  );\r\n}\r\nexport function fetchCast(movieId) {\r\n  return axios.get(\r\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=333ea31ca01b4ec8ead6d98f3e2d2283&language=en-US`,\r\n  );\r\n}\r\nexport function fetchReviews(movieId) {\r\n  return axios.get(\r\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=333ea31ca01b4ec8ead6d98f3e2d2283&language=en-US`,\r\n  );\r\n}\r\n","import { NavLink } from 'react-router-dom';\r\nimport s from '../styles/header.module.css';\r\n\r\nconst Navigation = () => (\r\n  <header className={s.header}>\r\n    <nav className={s.nav}>\r\n      <NavLink to=\"/\" className={s.link} activeClassName={s.activeLink} exact>\r\n        Home\r\n      </NavLink>\r\n      <NavLink to=\"/movies\" className={s.link} activeClassName={s.activeLink}>\r\n        Movies\r\n      </NavLink>\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default Navigation;\r\n","import { useState, useEffect } from 'react';\r\nimport { Link, NavLink, useRouteMatch } from 'react-router-dom';\r\n\r\nconst MoviesView = ({ onSubmit }) => {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const onChange = e => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  const onSubmitForm = e => {\r\n    e.preventDefault();\r\n\r\n    onSubmit(query);\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmitForm}>\r\n      <h1>Movies</h1>\r\n      <input type=\"text\" value={query} onChange={onChange} />\r\n      <button type=\"submit\">Search</button>\r\n    </form>\r\n  );\r\n};\r\nexport default MoviesView;\r\n","import { useState, useEffect } from 'react';\r\nimport MoviesView from './MoviesView';\r\nimport * as HomePageApi from '../services/ApiGenerator';\r\nimport { NavLink, useRouteMatch } from 'react-router-dom';\r\nimport Loader from '../Loader/Loader';\r\n\r\nconst MoviesPage = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [films, setFilms] = useState([]);\r\n  const [loader, setLoader] = useState(false);\r\n  const { url } = useRouteMatch();\r\n\r\n  useEffect(() => {\r\n    if (!searchQuery) {\r\n      return;\r\n    }\r\n\r\n    const fetchFilm = () => {\r\n      setLoader(true);\r\n      HomePageApi.findFilms(searchQuery)\r\n        .then(({ data }) => {\r\n          setFilms(prevFilm => [...prevFilm, ...data.results]);\r\n        })\r\n        .finally(() => setLoader(false));\r\n    };\r\n\r\n    fetchFilm();\r\n  }, [searchQuery]);\r\n\r\n  const changeQuery = query => {\r\n    setSearchQuery(query);\r\n    setFilms([]);\r\n  };\r\n  return (\r\n    <>\r\n      <MoviesView onSubmit={changeQuery} />\r\n      <ul>\r\n        {films &&\r\n          films.map(film => (\r\n            <li key={film.id}>\r\n              <NavLink to={`${url}/${film.id}`}>{film.title}</NavLink>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n      {loader && <Loader />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviesPage;\r\n","import { useState, useEffect } from 'react';\r\nimport * as HomePageApi from '../services/ApiGenerator';\r\nimport { useParams } from 'react-router-dom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from '../styles/cast.module.css';\r\nconst Cast = () => {\r\n  const [actors, setActors] = useState(null);\r\n  const { id } = useParams();\r\n\r\n  const urlImg = 'https://image.tmdb.org/t/p/w500/';\r\n  useEffect(() => {\r\n    HomePageApi.fetchCast(id).then(({ data }) => {\r\n      const splicedActors = data.cast.slice(0, 8);\r\n      setActors(splicedActors);\r\n    });\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {actors &&\r\n          actors.map(actor => (\r\n            <li key={uuidv4()}>\r\n              <img\r\n                width=\"200\"\r\n                height=\"220\"\r\n                src={`${urlImg}${actor.profile_path}`}\r\n                alt=\"actors\"\r\n                className={s.image}\r\n              />\r\n              <p>{actor.name}</p>\r\n              <p>Character: {actor.character}</p>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n","import { useState, useEffect } from 'react';\r\nimport * as HomePageApi from '../services/ApiGenerator';\r\nimport { useParams } from 'react-router-dom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst Review = () => {\r\n  const [reviews, setReview] = useState([]);\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    HomePageApi.fetchReviews(id).then(({ data }) => {\r\n      setReview(data.results);\r\n    });\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {reviews.length > 0 ? (\r\n          reviews.map(review => (\r\n            <li key={uuidv4()}>\r\n              <h3>{review.author}</h3>\r\n              <p>\r\n                {review.content.length > 180\r\n                  ? review.content.slice(0, 180) + '...'\r\n                  : review.content}\r\n              </p>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <h2> Oops, there are no reviews</h2>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","import { useState, useEffect } from 'react';\r\nimport * as HomePageApi from '../services/ApiGenerator';\r\nimport { NavLink, useParams, useRouteMatch } from 'react-router-dom';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Cast from './Cast';\r\nimport Review from './Review';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default function FilmPage() {\r\n  const { id } = useParams();\r\n  // console.log(id);\r\n  const [films, setFilms] = useState(null);\r\n  const { url, path } = useRouteMatch();\r\n  const urlImg = 'https://image.tmdb.org/t/p/w500/';\r\n\r\n  useEffect(() => {\r\n    const fetchFilm = () => {\r\n      HomePageApi.filmDetails(id).then(({ data }) => {\r\n        setFilms(data);\r\n      });\r\n    };\r\n\r\n    fetchFilm();\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      {films && (\r\n        <>\r\n          <h1>{films.title}</h1>\r\n          <img\r\n            width=\"300\"\r\n            height=\"320\"\r\n            src={`${urlImg}${films.poster_path}`}\r\n            alt={films.title}\r\n          />\r\n          <h3>User Score: {films.vote_average * 10 + '%'}</h3>\r\n\r\n          <h3>Overview:</h3>\r\n          <div style={{ width: 800 }}> {films.overview}</div>\r\n          <h3>Genres</h3>\r\n          {films.genres.map(film => (\r\n            <p key={uuidv4()}>{film.name}</p>\r\n          ))}\r\n\r\n          <hr />\r\n          <h2>Additional information</h2>\r\n\r\n          <ul>\r\n            <li>\r\n              <NavLink to={`${url}/cast`}>Cast</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to={`${url}/reviews`}>Reviews</NavLink>\r\n            </li>\r\n          </ul>\r\n          <hr />\r\n          <Route path={`${path}/cast`}>\r\n            <Cast id={id} />\r\n          </Route>\r\n          <Route path={`${path}/reviews`}>\r\n            <Review id={id} />\r\n          </Route>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport HomeView from './views/HomeView';\nimport Navigation from './views/Navigation';\nimport MoviesPage from './views/MoviesPage';\nimport FilmPage from './views/FilmPage';\nconst App = () => {\n  return (\n    <>\n      <Navigation />\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomeView />\n        </Route>\n        <Route path=\"/movies\" exact>\n          <MoviesPage />\n        </Route>\n        <Route path=\"/movies/:id\">\n          <FilmPage />\n        </Route>\n\n        <Redirect to=\"/\" />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}